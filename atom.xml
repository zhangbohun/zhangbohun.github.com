<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Zhangbohun' Blog]]></title>
  <subtitle><![CDATA[不问得失，自顾取舍。]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://zhangbohun.github.io/"/>
  <updated>2018-11-12T07:20:37.940Z</updated>
  <id>http://zhangbohun.github.io/</id>
  
  <author>
    <name><![CDATA[zhangbohun]]></name>
    <email><![CDATA[zhangbohun@163.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[冥想练习]]></title>
    <link href="http://zhangbohun.github.io/2018/11/06/%E5%86%A5%E6%83%B3%E7%BB%83%E4%B9%A0/"/>
    <id>http://zhangbohun.github.io/2018/11/06/冥想练习/</id>
    <published>2018-11-05T16:05:04.000Z</published>
    <updated>2018-11-10T06:47:39.834Z</updated>
    <content type="html"><![CDATA[<p>目的：<br>锻炼心力，治疗<a href="https://www.jianshu.com/p/302d25da305e" target="_blank" rel="external">心灵的软弱</a>，摈弃妄念，保持安定、强大、清明的心态。</p>
<p>方法：<br>1.放空大脑，排除外界干扰<br>2.专注于呼吸，不中断地数到10再数回1<br>3.身体扫描，感受身体从脚到脑<br>4.专注一个主题或概念或空，体察自己的思想、情绪、行动和身心感受</p>
<p>泛化之，活在当下，活在此刻，意识在心流。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>目的：<br>锻炼心力，治疗<a href="https://www.jianshu.com/p/302d25da305e" target="_blank" rel="external">心灵的软弱</a>，摈弃妄念，保持安定、强大、清明的心态。</p>
<p>方法：<br]]>
    </summary>
    
      <category term="使用技巧" scheme="http://zhangbohun.github.io/tags/%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
      <category term="整理总结" scheme="http://zhangbohun.github.io/tags/%E6%95%B4%E7%90%86%E6%80%BB%E7%BB%93/"/>
    
      <category term="介绍" scheme="http://zhangbohun.github.io/tags/%E4%BB%8B%E7%BB%8D/"/>
    
      <category term="6.方法技巧" scheme="http://zhangbohun.github.io/categories/6-%E6%96%B9%E6%B3%95%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RegexExtract网页文本提取]]></title>
    <link href="http://zhangbohun.github.io/2017/01/16/RegexExtract%E7%BD%91%E9%A1%B5%E6%96%87%E6%9C%AC%E6%8F%90%E5%8F%96/"/>
    <id>http://zhangbohun.github.io/2017/01/16/RegexExtract网页文本提取/</id>
    <published>2017-01-15T17:33:08.000Z</published>
    <updated>2017-04-15T19:03:26.064Z</updated>
    <content type="html"><![CDATA[<p>这是一个Chrome浏览器扩展应用。<br>它的功能是从网页中提取你用正则表达式描述的文本内容。<br>下载链接：<a href="https://pan.baidu.com/s/1nv0TFyp" target="_blank" rel="external">百度网盘</a><br>界面如下：<br><img src="\images\RegexExtract.png" alt=""><br><br>如上图，共有三种搜索模式：<br>节点模式，搜索HTML节点文本，优点是可以高亮搜索结果位置。<br>文本模式，搜索你看到的网页文本，常用在搜索结果包含超链接文本时。<br>源码模式，搜索网页的HTML源代码，常用在搜索图片地址，下载链接等。</p>
<p>最后，那么问题来了，如果你不清楚正则表达式是什么，请看看<a href="/2015/11/23/正则表达式总结/">这里</a>。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是一个Chrome浏览器扩展应用。<br>它的功能是从网页中提取你用正则表达式描述的文本内容。<br>下载链接：<a href="https://pan.baidu.com/s/1nv0TFyp" target="_blank" rel="external">百度网盘</]]>
    </summary>
    
      <category term="我的软件" scheme="http://zhangbohun.github.io/tags/%E6%88%91%E7%9A%84%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="工具" scheme="http://zhangbohun.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="2.软件" scheme="http://zhangbohun.github.io/categories/2-%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python2字符串编码问题总结]]></title>
    <link href="http://zhangbohun.github.io/2016/05/29/Python2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>http://zhangbohun.github.io/2016/05/29/Python2字符串编码问题总结/</id>
    <published>2016-05-29T05:18:51.000Z</published>
    <updated>2016-05-31T08:40:49.014Z</updated>
    <content type="html"><![CDATA[<p>Python2.7中的字符串编码问题的关键是：<br>str其实并不是字符串而是字节串(八位二进制数据串)，而Unicode字符串对象才是真正的字符串。</p>
<p>所以只要弄清楚str字节串中保存的到底是什么编码格式的二进制数据即可解决编码问题。<br>1，源码文件（.py.pyw）编码问题。<br>只要保证文件编码为无BOM的utf-8格式，然后在源码的第一行加上<br><code># -*- coding: utf-8 -*-</code><br>就可以保证正常读取utf-8编码编码的数据了，用utf-8格式解码其中的字符串就可以得到Unicode字符串对象了。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># -*- codin<span class="variable">g:</span> utf-<span class="number">8</span> -*-</div><div class="line"><span class="keyword">print</span> <span class="built_in">type</span>(<span class="string">'中文'</span>.decode(<span class="string">'utf-8'</span>))</div></pre></td></tr></table></figure>

<p>2，读取文本文件或者获取网上的字符数据的编码问题。<br>其实和读取源代码文件时一样，只是源代码文件第一行说明了编码格式而这时没有，需要自行判断。<br>文件编码格式可以通过notepad2记事本查看确认，网络文本可以根据网页head中的信息确认编码格式，然后相应处理即可。<br>用二进制方式（wb，rb）读取文件数据（可以避免一些字符方式（w，r）时Python2默认以ASCII编码格式读取文件字符引起的问题，例如不同平台的换行符问题），然后根据实际编码格式解码得到Unicode字符串对象（保存文件一律默认使用utf-8编码格式）。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">with</span> open(<span class="string">'1.txt'</span>,<span class="string">'wb'</span>)<span class="keyword">as</span> f:</div><div class="line">  f.write(<span class="string">u'中文'</span>.encode(<span class="string">'utf8'</span>))</div><div class="line"><span class="keyword">with</span> open(<span class="string">'1.txt'</span>,<span class="string">'rb'</span>)<span class="keyword">as</span> f:</div><div class="line">  <span class="keyword">print</span> type(f.read().decode(<span class="string">'utf8'</span>))</div></pre></td></tr></table></figure>

<p>网络文本读取推荐用requests库，然后根据实际编码格式解码得到Unicode字符串对象。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># -*- codin<span class="variable">g:</span> utf-<span class="number">8</span> -*-</div><div class="line">import requests</div><div class="line">response = requests.<span class="built_in">get</span>(<span class="string">'http://www.baidu.com'</span>)</div><div class="line">response.encoding = <span class="string">'utf8'</span>#<span class="string">'gbk'</span>等等</div><div class="line"><span class="keyword">print</span> <span class="built_in">type</span>(response.text)</div></pre></td></tr></table></figure>

<p>3，控制台输出的编码问题。<br>输出Unicode字符串对象就好了，它会输出对应系统平台默认编码的字符串数据<br>例如Windows的cmd窗口下运行以下代码程序</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">print</span> <span class="string">'abc中文'</span><span class="comment">#utf-8编码的字符串数据</span></div><div class="line"><span class="keyword">print</span> <span class="string">u'abc中文'</span></div></pre></td></tr></table></figure>

<p>会有输出：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">abc</span>涓枃</div><div class="line"><span class="keyword">abc</span>中文</div></pre></td></tr></table></figure>

<p>4，强调一下，Unicode字符串对象才是真正的字符串！</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">print</span> len(<span class="string">'abc中文'</span>)<span class="comment">#str，9</span></div><div class="line"><span class="keyword">print</span> <span class="string">'abc中文'</span>[:-<span class="number">1</span>]<span class="comment">#输出的最后一个字符是乱码</span></div><div class="line"><span class="keyword">print</span> len(<span class="string">u'abc中文'</span>)<span class="comment">#Unicode字符串对象,5</span></div><div class="line"><span class="keyword">print</span> <span class="string">u'abc中文'</span>[:-<span class="number">1</span>]<span class="comment">#输出abc中</span></div></pre></td></tr></table></figure>

<p>得到Unicode字符串对象方法</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">print</span> <span class="string">u'abc中文'</span><span class="comment">#定义Unicode字符串对象</span></div><div class="line"><span class="keyword">print</span> <span class="string">'abc中文'</span>.decode(<span class="string">'utf-8'</span>)<span class="comment">#解码获取Unicode字符串对象</span></div><div class="line"><span class="keyword">print</span> <span class="string">'abc中文'</span>, <span class="string">'utf-8'</span>)<span class="comment">#用unicode()方法获取Unicode字符串对象</span></div></pre></td></tr></table></figure>

<p>最后总结一下，<br>读取到字节串数据后根据实际编码格式解码（decode）成Unicode字符串对象，使用Unicode对象处理字符串，输出到控制台时用Unicode字符串对象，保存数据到文件时将字符串编码（encode）成utf-8编码格式字节串数据。<br>更精简的：<br>读写都是用的八位二进制字节串数据，通过编解码与Unicode字符串对象相互转换，程序中尽量使用Unicode字符串对象。</p>
<p>Python2的字符串编码的坑大概就这些了，还是会继续使用Python2，因为用<code>print</code>不想加括号╮(╯_╰)╭</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Python2.7中的字符串编码问题的关键是：<br>str其实并不是字符串而是字节串(八位二进制数据串)，而Unicode字符串对象才是真正的字符串。</p>
<p>所以只要弄清楚str字节串中保存的到底是什么编码格式的二进制数据即可解决编码问题。<br>1，源码文件（.]]>
    </summary>
    
      <category term="整理总结" scheme="http://zhangbohun.github.io/tags/%E6%95%B4%E7%90%86%E6%80%BB%E7%BB%93/"/>
    
      <category term="介绍" scheme="http://zhangbohun.github.io/tags/%E4%BB%8B%E7%BB%8D/"/>
    
      <category term="代码" scheme="http://zhangbohun.github.io/tags/%E4%BB%A3%E7%A0%81/"/>
    
      <category term="1.编程" scheme="http://zhangbohun.github.io/categories/1-%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[TextTools文本处理小工具]]></title>
    <link href="http://zhangbohun.github.io/2016/05/24/TextTools%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    <id>http://zhangbohun.github.io/2016/05/24/TextTools文本处理小工具/</id>
    <published>2016-05-24T06:26:49.000Z</published>
    <updated>2016-06-30T11:32:37.518Z</updated>
    <content type="html"><![CDATA[<p>这是个用Python写的简单的文本处理小工具，图形界面用Tkinter库实现的。<br>为了方便大家使用，我用pyinstaller把程序打包成了可以直接运行的exe文件（不过不是单文件，打包成单文件的话每次运行程序都需要解压，会很慢。）<br>下载链接：<a href="http://pan.baidu.com/s/1pLfBgwF" target="_blank" rel="external">百度网盘</a></p>
<p>这个程序比较适合使用鼠标操作，在编辑框内：左键单击粘贴，双击复制，右键单击清空。<br>功能大致分为三块，普通文本处理，编码解码，格式化，具体如下图：<br><img src="\images\TextTools\TextTools1.png" alt=""></p>
<p><img src="\images\TextTools\TextTools2.png" alt=""></p>
<p><img src="\images\TextTools\TextTools3.png" alt=""><br><br><br>最后，如上所示，因为功能较多，所以测试不周，如果大家在使用时发现有什么问题可以评论告诉我。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是个用Python写的简单的文本处理小工具，图形界面用Tkinter库实现的。<br>为了方便大家使用，我用pyinstaller把程序打包成了可以直接运行的exe文件（不过不是单文件，打包成单文件的话每次运行程序都需要解压，会很慢。）<br>下载链接：<a href="]]>
    </summary>
    
      <category term="我的软件" scheme="http://zhangbohun.github.io/tags/%E6%88%91%E7%9A%84%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="工具" scheme="http://zhangbohun.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="2.软件" scheme="http://zhangbohun.github.io/categories/2-%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于代码复用]]></title>
    <link href="http://zhangbohun.github.io/2016/04/04/%E5%85%B3%E4%BA%8E%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8/"/>
    <id>http://zhangbohun.github.io/2016/04/04/关于代码复用/</id>
    <published>2016-04-04T05:41:34.000Z</published>
    <updated>2016-04-11T02:00:45.348Z</updated>
    <content type="html"><![CDATA[<p>关于代码复用的一些整理总结，很简单，但是平常不会细想吧。</p>
<p>代码复用是有两个方向的，<br>一种是对相对下层的具体的操作的复用，从实现出发，例如各种语言的工具类库、GUI编程中的界面组件等等；另一种则是对上层抽象的操作逻辑的复用，从需求出发，面向抽象（接口）编程、设计模式、框架，例如MVC分层架构思想、各种用来写Web应用的框架等等。</p>
<p>相对来说下层复用更容易，上层复用只在特定的操作逻辑不变的情形下比较可行，比如Web框架，容易抽象出完整的流程（即需要实现的操作逻辑）；或者是代码组织层面上的设计模式、软件架构经验；而在要按照“具体需求”来设计操作逻辑的情形下相对难实现，因为很难合适的界定“具体需求”中操作逻辑不变部分的层次。</p>
<p>一些启发意义：<br>造“框架轮子”（尤其是对应某个具体需求的）得靠“重构”从实际应用中抽离出来（除非对具体需求十分熟悉和明确），当然初始阶段一些基础的框架和架构设计肯定是要的；而设计或者抽取工具类库的方法时要符合单一功能性，不要妄图包含上层的需求处理的逻辑。<br>更广义的，任何软件都可以从这两个方向来看待，提供基础功能的软件和提供抽象流程的软件（也有两者合一的，因为平常没有这个概念所以都是模糊的）。例如多媒体播放器、图片浏览器、压缩工具、Photoshop、数据库软件、编辑器等等就算第一种，而博客、论坛、微博、GTD或者清单管理软件、记账软件、IDE等等大致就算是第二种类型了。当然，这种软件分类只是泛泛之谈，切莫较真吧(^_^)</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>关于代码复用的一些整理总结，很简单，但是平常不会细想吧。</p>
<p>代码复用是有两个方向的，<br>一种是对相对下层的具体的操作的复用，从实现出发，例如各种语言的工具类库、GUI编程中的界面组件等等；另一种则是对上层抽象的操作逻辑的复用，从需求出发，面向抽象（接口）编程]]>
    </summary>
    
      <category term="整理总结" scheme="http://zhangbohun.github.io/tags/%E6%95%B4%E7%90%86%E6%80%BB%E7%BB%93/"/>
    
      <category term="1.编程" scheme="http://zhangbohun.github.io/categories/1-%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[记一次网络搜索]]></title>
    <link href="http://zhangbohun.github.io/2016/02/29/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%BD%91%E7%BB%9C%E6%90%9C%E7%B4%A2/"/>
    <id>http://zhangbohun.github.io/2016/02/29/记一次网络搜索/</id>
    <published>2016-02-29T08:09:48.000Z</published>
    <updated>2016-02-29T11:37:04.856Z</updated>
    <content type="html"><![CDATA[<p>记一次波折而有趣的搜索资源过程。<br>起因，很明显在搜狗壁纸上的在这些RainbowBlaxx组合的壁纸是来自一个系列的：<br><img src="\images\search\01.png" alt=""><br><br><br>但经过搜索之后发现在搜狗壁纸的资源库里并没有完整系列的图片：<br><img src="\images\search\02.png" alt=""><br><br><br>于是上网搜索，找到了两个资源：<br><img src="\images\search\03.png" alt=""><br><a href="http://tieba.baidu.com/p/2824512351" target="_blank" rel="external">贴吧链接</a><br><img src="\images\search\04.png" alt=""><br><a href="http://krmtv.com/bbs/thread-572207-1-1.html" target="_blank" rel="external">论坛链接</a><br><br><br>第一个链接里的帖子资源链接指向一个<a href="http://weibo.com/u/1764767032" target="_blank" rel="external">微博</a>。<br><img src="\images\search\05.png" alt=""><br>然后通过微博搜索找到了RainbowBlaxx组合壁纸资源的<a href="http://t.cn/8FqA09u" target="_blank" rel="external">链接</a>：<br><img src="\images\search\06.png" alt=""><br>最后发现和之前通过搜索找到的第二个论坛资源链接其实是同一个：<a href="http://krmtv.com/bbs/thread-572207-1-1.html" target="_blank" rel="external">http://krmtv.com/bbs/thread-572207-1-1.html</a><br><br><br>点进去之后发现资源需要注册下载，<a href="https://greasyfork.org/zh-CN/scripts/2510-下载一键通" target="_blank" rel="external">搜狗下载一键通</a>也没有提示有公共资源。<br><img src="\images\search\07.png" alt=""><br>点开注册页面有注册时间限制，要每周一8:00-22:00才能注册：<br><img src="\images\search\08.png" alt=""><br>可是今天就是周一啊。。。<br><img src="\images\search\09.png" alt=""><br>点开这个论坛的官方微博发现有人和我有一样的疑惑。<br><img src="\images\search\10.png" alt=""><br>看样子注册下载这条路不通了，回头还看到了贴吧那个帖子下面有人的吐槽。<br><img src="\images\search\11.png" alt=""><br><br><br>试试直接找那个贴主的百度网盘分享，论坛和贴吧用的名字一样都是“享受资源”。<br><img src="\images\search\12.png" alt=""> <img src="\images\search\13.png" alt=""><br><br><br>好办，直接搜索这个名字的百度云用户资源看看，<br><img src="\images\search\14.png" alt=""><br><br><br>果然第一个就是。<a href="http://pan.baidu.com/wap/share/home?uk=103761835&amp;third=0&amp;adapt=pc&amp;fr=ftw" target="_blank" rel="external">链接</a><br><img src="\images\search\15.png" alt=""><br><br><br>突然想起之前查看贴主微博的时候看到有几条后面写了很眼熟的四位字母密码，很有可能是百度网盘的提取密码啊。<br><img src="\images\search\16.png" alt=""><br><a href="http://t.cn/RzSYXVo" target="_blank" rel="external">http://t.cn/RzSYXVo</a> 点开一看，果然还是这个“享受资源”，看来我要的壁纸资源很有可能在百度网盘上，那个隐藏的帖子看不到没关系，我马上就要直捣黄龙了。<br><img src="\images\search\17.png" alt=""><br><br><br>翻了两页找到贴主发资源的2014-1-20那天附近的<a href="http://pan.baidu.com/wap/share/home?third=0&amp;uk=103761835&amp;start=40&amp;adapt=pc&amp;fr=ftw" target="_blank" rel="external">页面</a>。<br><img src="\images\search\18.png" alt=""> <img src="\images\search\19.png" alt=""> <img src="\images\search\20.png" alt=""><br><br><br>果然有！<a href="http://pan.baidu.com/share/link?uk=103761835&amp;shareid=1607144684&amp;third=0&amp;adapt=pc&amp;fr=ftw" target="_blank" rel="external">链接</a><br><img src="\images\search\21.png" alt=""><br>赶紧下载，<br>点开一看，<br>压缩包加密了。。。<br><img src="\images\search\22.png" alt=""><br><br><br>怎么办，先去论坛搜索一下贴主发的其他帖子内容有没有提到密码的。<br><img src="\images\search\23.png" alt=""><br>仔细看了一下都没有提及，难道只能用软件暴力破解了吗？<br><br><br>当我刚刚把破解软件设置好时，<br><img src="\images\search\24.png" alt=""><br>忽然想起之前搜索贴主微博时瞟见过“解压密码”几个字，回头一看果然有：fszb0.1<br><img src="\images\search\25.png" alt=""><br>输入一试，不行。。。<br><img src="\images\search\26.png" alt=""><br><br><br>不如再到贴主的微博里搜索一下“<a href="http://weibo.com/u/1764767032?profile_ftype=1&amp;is_all=1&amp;is_search=1&amp;key_word=%E8%A7%A3%E5%8E%8B%E5%AF%86%E7%A0%81#_0" target="_blank" rel="external">解压密码</a>”。<br><img src="\images\search\27.png" alt=""><br>发现规律了，密码前四个位都是fszb字母,是博主名字首字母。<br><img src="\images\search\28.png" alt=""><br><br><br>后面基本是些简单的字母数字和.直接暴力破解把，破解成功率打了很多了，设置自定义破解。<br><img src="\images\search\29.png" alt=""><br><br><br>虽然已经很接近了，但还是要破解很久的，<br>破解软件正在跑，电脑卡的一笔，我又翻了翻那几个搜索出来的有密码的微博。<br>注意看这条微博的发布日期：<br><img src="\images\search\30.png" alt=""><br>原来有一部分的密码的后面几位是日期，碰碰运气试试：fszb0120<br><img src="\images\search\31.png" alt=""><br><br><br>还是不行，继续等软件破解吧。。。<br>不对，可能还有个点<code>.</code>！!<br><img src="\images\search\32.png" alt=""><br><br><br>用fszb0120.一试，成了，哈哈！<br><img src="\images\search\33.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>记一次波折而有趣的搜索资源过程。<br>起因，很明显在搜狗壁纸上的在这些RainbowBlaxx组合的壁纸是来自一个系列的：<br><img src="\images\search\01.png" alt=""><br><br><br>但经过搜索之后发现在搜狗壁纸的资源库里]]>
    </summary>
    
      <category term="有趣" scheme="http://zhangbohun.github.io/tags/%E6%9C%89%E8%B6%A3/"/>
    
      <category term="使用技巧" scheme="http://zhangbohun.github.io/tags/%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
      <category term="6.方法技巧" scheme="http://zhangbohun.github.io/categories/6-%E6%96%B9%E6%B3%95%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[阅读碎片化的对策]]></title>
    <link href="http://zhangbohun.github.io/2016/02/13/%E9%98%85%E8%AF%BB%E7%A2%8E%E7%89%87%E5%8C%96%E7%9A%84%E5%AF%B9%E7%AD%96/"/>
    <id>http://zhangbohun.github.io/2016/02/13/阅读碎片化的对策/</id>
    <published>2016-02-13T07:06:54.000Z</published>
    <updated>2018-11-12T07:11:04.373Z</updated>
    <content type="html"><![CDATA[<p>所谓阅读的“碎片化”有两方面，一方面是信息的碎片化，每篇文章都很短小，一次性可能会看很多篇话无相关性的文章；另一方面是阅读时间碎片化，时间短，心理状态也差，看完一篇稍长的文章用来思考的时间太短。<br>这样无论如何都会遇到一个问题，短时间内大脑对于某一主题的思考只是预热了一下没进入状态，上一篇还没想明白又要看下一篇或者没时间了，这样都是没有深入思考的阅读所以是无效的。</p>
<p>以上也就是我对“阅读碎片化”的一些理解，本质来说就是碎片化方式导致阅读缺乏深入思考效率低，而如何更好地利用碎片时间，如何阅读碎片化的信息，我的的方法如下。</p>
<p>核心理念：<br>整理碎片，有意识主动根据某一个“主题”获取的一系列碎片不是碎片</p>
<p>目的：<br>消化吸收碎片化文章中的的概念知识</p>
<p>方法：<br>1，把日常生活中碎片化的“阅读时间”作为“爬虫时间”，浏览略读微博，论坛，博客，微信订阅等文章（不要直接把这些随机推送的信息源作为阅读源），收集分类标记（按主题）其中有兴趣的篇章<br>2，文章不要囤积太多，花一段较长的时间主动围绕一个主题一次性批量阅读平时积累下来的文章，结合这些相关内容对比总结<br>3，整理输出自己的理解</p>
<p>输入管理，控制输入，优化输入。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>所谓阅读的“碎片化”有两方面，一方面是信息的碎片化，每篇文章都很短小，一次性可能会看很多篇话无相关性的文章；另一方面是阅读时间碎片化，时间短，心理状态也差，看完一篇稍长的文章用来思考的时间太短。<br>这样无论如何都会遇到一个问题，短时间内大脑对于某一主题的思考只是预热了一]]>
    </summary>
    
      <category term="整理总结" scheme="http://zhangbohun.github.io/tags/%E6%95%B4%E7%90%86%E6%80%BB%E7%BB%93/"/>
    
      <category term="阅读" scheme="http://zhangbohun.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
      <category term="6.方法技巧" scheme="http://zhangbohun.github.io/categories/6-%E6%96%B9%E6%B3%95%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[什么是经典]]></title>
    <link href="http://zhangbohun.github.io/2015/11/26/%E4%BB%80%E4%B9%88%E6%98%AF%E7%BB%8F%E5%85%B8/"/>
    <id>http://zhangbohun.github.io/2015/11/26/什么是经典/</id>
    <published>2015-11-26T01:44:46.000Z</published>
    <updated>2016-01-18T08:11:10.901Z</updated>
    <content type="html"><![CDATA[<p>大家都总说看书要看经典的，看电影也要经典的，究竟经典是什么意思？</p>
<blockquote>
<p>经典指具有典范性、权威性的；经久不衰的万世之作；经过历史选择出来的 “最有价值经典的”; 最能表现本行业的精髓的；最具代表性的；最完美的作品。</p>
</blockquote>
<p>我觉得经典的解释里关键一点就是引入时间这一维度来为事物作价值上的评判。<br>但是我觉得时间并不一定能够筛选东西的品质，留下来的未必是好的，新产生的未必不如流传下来的。</p>
<p>真正的经典不在于发布得早，也不在于对某个时段有多大的影响力，也不在于权威，也不在于共识，而在于你自己能够从它本身得到些什么。这需要个人的经验和见识，还带有个人喜好。<br>这就是我对“经典”自己的定义。所以对别人的那些推荐别抱太多期望，公认的经典也不一定我的经典。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>大家都总说看书要看经典的，看电影也要经典的，究竟经典是什么意思？</p>
<blockquote>
<p>经典指具有典范性、权威性的；经久不衰的万世之作；经过历史选择出来的 “最有价值经典的”; 最能表现本行业的精髓的；最具代表性的；最完美的作品。</p>
</blockq]]>
    </summary>
    
      <category term="观点" scheme="http://zhangbohun.github.io/tags/%E8%A7%82%E7%82%B9/"/>
    
      <category term="4.思考整理" scheme="http://zhangbohun.github.io/categories/4-%E6%80%9D%E8%80%83%E6%95%B4%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[正则表达式总结]]></title>
    <link href="http://zhangbohun.github.io/2015/11/23/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://zhangbohun.github.io/2015/11/23/正则表达式总结/</id>
    <published>2015-11-23T04:47:45.000Z</published>
    <updated>2017-03-16T15:52:58.777Z</updated>
    <content type="html"><![CDATA[<p>正则表达式之所以这么难以理解也许就是因为它所描述的东西本身十分抽象。<br>以下，我将尝试以我目前的见识水平总结一下对正则表达式相关的知识的理解。</p>
<p>正则表达式最大的作用就是从一大段纷乱的字符串中寻找并定位符合条件的字符串，<br>而具体的一条正则表达式的含义就是在描述所谓的“条件”——字符串的特征信息，这包括那段字符串本身的内容还有它所在的位置。</p>
<ol>
<li>对内容的描述，即对一个字符的描述。<br> 以下列出对一个字符从最精确到最模糊的描述：<pre><code> abc123… 等等，是具体的一个字符
 <span class="special">[</span>a-b<span class="special">]</span>   是其中的某一个
 <span class="command">\d</span>      是数字
 <span class="command">\w</span>      是字母或数字或下划线或汉字
 <span class="command">\s</span>      是任意的空白符
 .       是除换行符以外的任意字符
</code></pre> 当然也有否定的描述：<pre><code> <span class="special">[</span>^0-9<span class="special">]</span>  不是其中的任何一个
 <span class="command">\D</span>      不是数字
 <span class="command">\W</span>      不是字母，数字，下划线，汉字的字符
 <span class="command">\S</span>      不是空白符的字符
</code></pre></li>
<li>对位置的描述。<br> 这个位置信息可以是简单的在某词语、某行的首尾也可以是在另一个特定的字符串的前后，也或者不在。<pre><code> \b   在单词的开始或结束
 ^    在字符串的开始
 $    在字符串的结束
 (?=<span class="built_in">exp</span>)     在 <span class="built_in">exp</span> 前面的位置
 (?&lt;=<span class="built_in">exp</span>)    在 <span class="built_in">exp</span> 后面的位置
 (?!<span class="built_in">exp</span>)     在后面跟的不是 <span class="built_in">exp</span> 的位置
 (?&lt;!<span class="built_in">exp</span>)    在前面不是 <span class="built_in">exp</span> 的位置
</code></pre></li>
<li><p>逻辑上的描述，或者说为描述加上逻辑。<br>加上逻辑描述前正则表达式的能力和普通Ctrl-F的搜索功能其实差不太多，但是有了这层逻辑描述以后正则描述字符串的能力就大大提升了，这就像编程一门语言有了IF-ELSE和DO-WHILE<br>首先<code>()</code>是必须有的，括号内看作一个整体，同时也附加了“捕获”的作用(没有捕获的括号是<code>(?:)</code>)。</p>
<p>选择，其实之前说的类似<code>[0-9]</code>的描述中也有简单的字符之间的“或”关系了。</p>
<pre><code> <span class="string">|，它两边的描述是“或”的关系</span>
</code></pre><p>重复，这个可以看作一个FOR循环判断，n（m）相当于跳出循环的条件。</p>
<pre><code> ?    重复零次或一次
 *    重复零次或更多次
 +    重复一次或更多次
 <span class="list">{n}</span>     重复 n 次
 <span class="list">{n,m}</span>   重复 n 到 m 次
 <span class="list">{n,}</span>    重复 n 次或更多次
</code></pre><p>贪婪与懒惰，这是更高一层的逻辑。</p>
<pre><code> *?    重复任意次，但尽可能少重复
 +?    重复 <span class="number">1</span> 次或更多次，但尽可能少重复
 ??    重复 <span class="number">0</span> 次或 <span class="number">1</span> 次，但尽可能少重复
 <span class="list">{n,m}</span>?    重复 n 到 m 次，但尽可能少重复
 <span class="list">{n,}</span>?     重复 n 次以上，但尽可能少重复
</code></pre></li>
</ol>
<p>以上并没有包含一般正则表达式所有的语法，从一开始也并没有这个打算，只是想总结一下我的想法，具体学习正则表达式推荐这篇<a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">文章</a>。<br>“正则表达式”这种 为了描述字符串信息所设计的 方法究竟好吗？以我现在的见识水平并不能作出判断，隐隐觉得不好。<br>正则表达式之所以这么难以理解根本就是由于为了语法简洁而不得不做出的牺牲(-.-)，因为编程时你完全可以自己写个函数去匹配字符串啊，但也会嫌麻烦吧？这就是程序员们自己挖的坑。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>正则表达式之所以这么难以理解也许就是因为它所描述的东西本身十分抽象。<br>以下，我将尝试以我目前的见识水平总结一下对正则表达式相关的知识的理解。</p>
<p>正则表达式最大的作用就是从一大段纷乱的字符串中寻找并定位符合条件的字符串，<br>而具体的一条正则表达式的含义就]]>
    </summary>
    
      <category term="介绍" scheme="http://zhangbohun.github.io/tags/%E4%BB%8B%E7%BB%8D/"/>
    
      <category term="整理总结" scheme="http://zhangbohun.github.io/tags/%E6%95%B4%E7%90%86%E6%80%BB%E7%BB%93/"/>
    
      <category term="1.编程" scheme="http://zhangbohun.github.io/categories/1-%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[四则运算简单实现]]></title>
    <link href="http://zhangbohun.github.io/2015/09/07/%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
    <id>http://zhangbohun.github.io/2015/09/07/四则运算简单实现/</id>
    <published>2015-09-07T08:06:14.000Z</published>
    <updated>2016-05-31T04:41:58.128Z</updated>
    <content type="html"><![CDATA[<p>一时兴起想到要写段有美感的代码（不过感觉没有实现这个目标嘛╮(╯_╰)╭），然后就想到要实现一下四则运算。<br>于是过了大概一个星期，写了三个版本。<br>第一版完全是我自己想到的思路，主要就是函数递归，遇到后面优先级高的情况就把后面的部分递归计算，否则就顺序计算下去。<br>第二版是按照当年数据结构课上教的方法写的，用了符号栈和数据栈作为辅助。<br>第三版是按照编译原理课语法分析的思路来写的，用的是LL(1)是语法，主要也是通过函数递归实现，但是和第一版不同的是各种情况分散在多个非终结符对应的函数中实现。<br>现在想到的就这三个，以后有新的想法会继续更新。<br>代码地址：<a href="http://t.cn/RyGzXB3" target="_blank" rel="external">http://t.cn/RyGzXB3</a></p>
<p>这里贴一段第二版的主要代码（这个版本的实现最简洁）</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#用符号栈和数字栈实现</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculate</span><span class="params">(list)</span>:</span><span class="comment">#这里传入的list是处理后的算式，已经分离了数值和操作符</span></div><div class="line">    list.append(<span class="string">'@'</span>)<span class="comment">#辅助符号‘@’</span></div><div class="line">    i = <span class="number">0</span></div><div class="line">    nums,op=[],[<span class="string">'@'</span>]<span class="comment">#数字栈和符号栈</span></div><div class="line">    <span class="keyword">while</span> i &lt; len(list):</div><div class="line">        <span class="keyword">if</span> type(list[i]) != type(<span class="string">''</span>):<span class="comment">#数值</span></div><div class="line">            nums.append(list[i])</div><div class="line">            i+=<span class="number">1</span></div><div class="line">        <span class="keyword">elif</span> op[-<span class="number">1</span>] <span class="keyword">in</span> <span class="string">'(@'</span> <span class="keyword">and</span> list[i] <span class="keyword">in</span> <span class="string">')@'</span>:<span class="comment">#左右括号抵消，首尾‘@’抵消</span></div><div class="line">            op.pop()</div><div class="line">            i+=<span class="number">1</span></div><div class="line">        <span class="keyword">elif</span> op[-<span class="number">1</span>]==<span class="string">'+'</span> <span class="keyword">and</span> list[i] <span class="keyword">in</span> <span class="string">'+-)@'</span>:<span class="comment">#先加</span></div><div class="line">            nums.append(nums.pop()+nums.pop())</div><div class="line">            op.pop()</div><div class="line">        <span class="keyword">elif</span> op[-<span class="number">1</span>]==<span class="string">'-'</span> <span class="keyword">and</span> list[i] <span class="keyword">in</span> <span class="string">'+-)@'</span>:<span class="comment">#先减</span></div><div class="line">            nums.append(-nums.pop()+nums.pop())</div><div class="line">            op.pop()</div><div class="line">        <span class="keyword">elif</span> op[-<span class="number">1</span>]==<span class="string">'*'</span> <span class="keyword">and</span> list[i] <span class="keyword">in</span> <span class="string">'+-*/)@'</span>:<span class="comment">#先乘</span></div><div class="line">            nums.append(nums.pop()*nums.pop())</div><div class="line">            op.pop()</div><div class="line">        <span class="keyword">elif</span> op[-<span class="number">1</span>]==<span class="string">'/'</span> <span class="keyword">and</span> list[i] <span class="keyword">in</span> <span class="string">'+-*/)@'</span>:<span class="comment">#先除</span></div><div class="line">            nums.append(<span class="number">1</span>/nums.pop()*nums.pop())</div><div class="line">            op.pop()</div><div class="line">        <span class="keyword">else</span>:<span class="comment">#优先级更高，压入符号栈</span></div><div class="line">            op.append(list[i])</div><div class="line">            i+=<span class="number">1</span></div><div class="line">    <span class="keyword">return</span> nums[-<span class="number">1</span>]</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p>一时兴起想到要写段有美感的代码（不过感觉没有实现这个目标嘛╮(╯_╰)╭），然后就想到要实现一下四则运算。<br>于是过了大概一个星期，写了三个版本。<br>第一版完全是我自己想到的思路，主要就是函数递归，遇到后面优先级高的情况就把后面的部分递归计算，否则就顺序计算下去。<]]>
    </summary>
    
      <category term="有趣" scheme="http://zhangbohun.github.io/tags/%E6%9C%89%E8%B6%A3/"/>
    
      <category term="代码" scheme="http://zhangbohun.github.io/tags/%E4%BB%A3%E7%A0%81/"/>
    
      <category term="1.编程" scheme="http://zhangbohun.github.io/categories/1-%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[LifeGame人生游戏]]></title>
    <link href="http://zhangbohun.github.io/2015/08/05/LifeGame%E4%BA%BA%E7%94%9F%E6%B8%B8%E6%88%8F/"/>
    <id>http://zhangbohun.github.io/2015/08/05/LifeGame人生游戏/</id>
    <published>2015-08-05T14:04:09.000Z</published>
    <updated>2016-06-30T12:04:29.261Z</updated>
    <content type="html"><![CDATA[<p>LifeGame，算是我做的第一个有用的Android软件(-.-)<a href="http://pan.baidu.com/s/1eROY4Rg" target="_blank" rel="external">下载地址</a></p>
<p>人生游戏，让人生量化（时间段）可见（积分统计）<br><img src="\images\Everything is quantifiable.jpg" alt="" title="Everything is quantifiable."><br>付出的，收获的，你的一生，都可以用时间来衡量，用分数来显示。</p>
<p>灵感来源：《太上感应篇》<br>赵康靖公择豆修心<br>宋朝的赵康靖公，曾经在桌子上放置了两个瓶子，利用黑豆和白豆来检修心念。他每起一个念头，就随着念头的善恶，而放置不同的豆子。起一个善念，马上就放置一颗白豆在瓶子里。动一个恶念，就放一颗黑豆在瓶子里。 起先，黑豆占大多数。接着，黑豆便逐渐减少。日子久了，则善恶这两种念头都忘了，瓶子和豆子这两样东西也就可以弃而不用了。</p>
<p>软件介绍：<br>界面如图，依次为总得分、月得分、周得分、日得分，还有八个进行加减分操作的按钮。<br><img src="\images\LifeGame.png" alt="" title="LifeGame"><br>使用方法，日常生活中每做完一件事以后就记录一下应得的分值，<br>根据所做事情的时间长短确定分值大小，学习锻炼等等得正分，吃喝玩乐等等为负分，其他一些不计分，这里可以按自己的想法自行规定。<br>15分钟以内的事情值5分，<br>15到30分钟的事情值10分，<br>30到60分钟的事情值20分，<br>60分钟以上的事情值30分，<br>反作弊（也防熊孩子），加减分操作最短间隔十分钟（其他分别为20、40、60分钟间隔）</p>
<p>一些使用建议：<br>做完一件事就进行加（减）分操作，如果忘记了就不要之后去补了。<br>不要急于得分，也不要因为忘记几次计分而作罢，平常心对待最好。<br>另外，即使做了一件再困难的事，比如当众演讲、等等，最多只能升一档得分级别（时间间隔限制允许的情况的话）<br>实际使用中其实一般不能保证每天的得分都是正的╮(╯_╰)╭但是每周的得分还是要保证的，否则就说明这段时间你过的太浪了(-.-)</p>
<p>其实我是要说：<br>“人生游戏”这个想法是我今年寒假结束从家里回学校在车站等车时想到的，一句话说出来就是，把人生看作一款电子游戏。<br>玩游戏也不比生活容易，但是大家都喜欢玩，为什么？电子游戏有一点让入迷的地方就是，它对玩家各种行为所致结果的反馈及时且明确（战利品、属性提升，红蓝消耗等等），简单来说就是积分系统。<br>不过呢，我现在所做的这个只是个简陋的demo，主要是因为暑假蹲在学校学了点Android开发的基础，忽然发现原来的这个想法在Android系统上简单实现一下还是可以的，就做了一个先玩玩啦。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>LifeGame，算是我做的第一个有用的Android软件(-.-)<a href="http://pan.baidu.com/s/1eROY4Rg" target="_blank" rel="external">下载地址</a></p>
<p>人生游戏，让人生量化（时间段]]>
    </summary>
    
      <category term="工具" scheme="http://zhangbohun.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="时间管理" scheme="http://zhangbohun.github.io/tags/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    
      <category term="我的软件" scheme="http://zhangbohun.github.io/tags/%E6%88%91%E7%9A%84%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="2.软件" scheme="http://zhangbohun.github.io/categories/2-%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[谁的灵魂]]></title>
    <link href="http://zhangbohun.github.io/2015/08/03/%E8%B0%81%E7%9A%84%E7%81%B5%E9%AD%82/"/>
    <id>http://zhangbohun.github.io/2015/08/03/谁的灵魂/</id>
    <published>2015-08-03T11:53:31.000Z</published>
    <updated>2016-01-22T12:07:54.841Z</updated>
    <content type="html"><![CDATA[<p>小时候看过一部叫<a href="http://movie.douban.com/subject/1294893/" target="_blank" rel="external">《第六日》</a>的科幻电影，印象极深。<br>因为这部电影让我萌生关于灵魂和意识的思考（瞎想）</p>
<p>相比于其他关于克隆人的电影《第六日》最特别的地方就是克隆人的肉体的同时可以他的复制记忆。<br>其实克隆技术本身对人伦的影响并没有想象中那么大，但当有个人不但和你长的一模一样而且和你有一样的爱恨恶欲甚至完全相同的记忆时，这才是真正可怕的问题，他是你吗？为什么你觉得自己才是自己呢？</p>
<p>多年以后当我看到小林泰三的<a href="http://site.douban.com/106459/widget/works/15325/" target="_blank" rel="external">《醉步男》</a>时又想起了当年看电影时遇到的这个迷思。当你的内心意识到自己在不断穿梭时空时，一觉醒来，昨天的你是今天的你吗？</p>
<p>如今计算机技术正在轰轰烈烈如火如荼地发展，那么AI在什么时候可以算得上拥有真正的智能呢？世间万物，只有人拥有灵魂和智慧吗？</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>小时候看过一部叫<a href="http://movie.douban.com/subject/1294893/" target="_blank" rel="external">《第六日》</a>的科幻电影，印象极深。<br>因为这部电影让我萌生关于灵魂和意识的思考（瞎想]]>
    </summary>
    
      <category term="神神叨叨" scheme="http://zhangbohun.github.io/tags/%E7%A5%9E%E7%A5%9E%E5%8F%A8%E5%8F%A8/"/>
    
      <category term="观后感" scheme="http://zhangbohun.github.io/tags/%E8%A7%82%E5%90%8E%E6%84%9F/"/>
    
      <category term="读后感" scheme="http://zhangbohun.github.io/tags/%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    
      <category term="5.收获感悟" scheme="http://zhangbohun.github.io/categories/5-%E6%94%B6%E8%8E%B7%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用Total Uninstall 卸载“绿色软件”]]></title>
    <link href="http://zhangbohun.github.io/2015/07/24/%E7%94%A8Total%20Uninstall%20%E5%8D%B8%E8%BD%BD%E2%80%9C%E7%BB%BF%E8%89%B2%E8%BD%AF%E4%BB%B6%E2%80%9D/"/>
    <id>http://zhangbohun.github.io/2015/07/24/用Total Uninstall 卸载“绿色软件”/</id>
    <published>2015-07-23T17:32:17.000Z</published>
    <updated>2015-12-23T11:35:46.652Z</updated>
    <content type="html"><![CDATA[<p>今天又看到了说绿色软件删除文件夹就无残留卸载的言论了。</p>
<p>关于普通的所谓绿色软件和便携软件的可以看看<a href="http://www.portablesoft.org/portable-soft/" target="_blank" rel="external">这篇文章</a><br>不多赘言，如何卸载绿色软件最好呢？有人说直接删了文件夹然后用cc清理一下注册表不就干净了，其实呢，不一定！因为还有一些软件会在ProgramData文件夹或者C:\Users\Administrator\AppData文件夹产生临时文件（不相信的童鞋可以打开看看这两个文件夹有木有曾经装过的绿色软件的残留）</p>
<p>关于卸载工最著名的应该是这三个了1. Total Uninstall2. Uninstall Tool3. Revo Uninstall Pro另外还有IObit Uninstalle，GeekUninstaller等等，哪个最好呢？论调不一，只能说各有特色吧，但是我个人还是认为 Total Uninstall最好，为什么呢，因为他有其他几个卸载工具所不具备的功能,大家应该知道 ，Total Uninstall可以制作绿色软件，其实他也可以卸载绿色软件哦！！</p>
<p>如何操作：只要打开 Total Uninstall然后把绿色软件的主程序拖拽进Total Uninstall的软件列表就可以分析卸载了，实测可以检测出所有相关文件夹，然后真正完全的卸载！（注意看一下分析列表是否正确有极小可能性分析错误）<br>软件下载（也可以去软件板块搜一搜）（有能力最好还是支持正版啦~）<br><a href="http://pan.baidu.com/s/1kTL6Csv" target="_blank" rel="external">破解便携版Total Uninstall Pro Portable.v6.3.1</a></p>
<p>混了这么久还是个来访客人挺惭愧的，只能到新人区发发东西了<br>更多软件相关原创文章（好吧其实刚刚开的博客还没有文章）<a href="http://knightforpango.blog.163.com/" target="_blank" rel="external">http://knightforpango.blog.163.com/</a><br>(以前在论坛发的旧文了，还是有实用性的，PS.那个博客网址已经废了)</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天又看到了说绿色软件删除文件夹就无残留卸载的言论了。</p>
<p>关于普通的所谓绿色软件和便携软件的可以看看<a href="http://www.portablesoft.org/portable-soft/" target="_blank" rel="externa]]>
    </summary>
    
      <category term="旧文" scheme="http://zhangbohun.github.io/tags/%E6%97%A7%E6%96%87/"/>
    
      <category term="使用技巧" scheme="http://zhangbohun.github.io/tags/%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
      <category term="2.软件" scheme="http://zhangbohun.github.io/categories/2-%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[骑马与砍杀]]></title>
    <link href="http://zhangbohun.github.io/2015/07/14/%E9%AA%91%E9%A9%AC%E4%B8%8E%E7%A0%8D%E6%9D%80/"/>
    <id>http://zhangbohun.github.io/2015/07/14/骑马与砍杀/</id>
    <published>2015-07-14T07:12:11.000Z</published>
    <updated>2015-12-23T11:20:44.808Z</updated>
    <content type="html"><![CDATA[<p>记一次游戏入迷，7月13日~8月22日</p>
<p>真喜欢这款游戏，让人热血沸腾，有种强烈的代入感。<br>遇到了劫匪，骑上骏马，抡起马刀，杀杀杀！</p>
<p>这是款非常不易入门的游戏（不同于如今大部分的网游，这也是很多单机游戏的魅力吧），<br>国家城镇名字一堆，兵种各有特色，武器装备五花八门，角色属性多得要命，，，，<br>刚开始玩的时候各种不懂，然后就开始学习如何玩游戏，搜集资料，研究方案，练习砍杀，接任务，做买卖。慢慢的，我的等级越来越高，队伍也壮大了，NPC队友找到了大半，终于得到了第一个自己的领地。我终于也成为领主了，要保护我的领地，要带领我的臣民奔小康！油然而生的自豪感，除了砍杀的快感，这种感觉也让人无法自拔啊。</p>
<p>也在玩自己的人生这款游戏，也要去学习、思考，去练习、积累，和小伙伴们一同抡起马刀砍杀一路的Boss</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>记一次游戏入迷，7月13日~8月22日</p>
<p>真喜欢这款游戏，让人热血沸腾，有种强烈的代入感。<br>遇到了劫匪，骑上骏马，抡起马刀，杀杀杀！</p>
<p>这是款非常不易入门的游戏（不同于如今大部分的网游，这也是很多单机游戏的魅力吧），<br>国家城镇名字一堆，兵]]>
    </summary>
    
      <category term="介绍" scheme="http://zhangbohun.github.io/tags/%E4%BB%8B%E7%BB%8D/"/>
    
      <category term="游戏" scheme="http://zhangbohun.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="5.收获感悟" scheme="http://zhangbohun.github.io/categories/5-%E6%94%B6%E8%8E%B7%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于喝不到的鸡汤和自己来煮鸡汤]]></title>
    <link href="http://zhangbohun.github.io/2015/06/27/%E5%85%B3%E4%BA%8E%E5%96%9D%E4%B8%8D%E5%88%B0%E7%9A%84%E9%B8%A1%E6%B1%A4%E5%92%8C%E8%87%AA%E5%B7%B1%E6%9D%A5%E7%85%AE%E9%B8%A1%E6%B1%A4/"/>
    <id>http://zhangbohun.github.io/2015/06/27/关于喝不到的鸡汤和自己来煮鸡汤/</id>
    <published>2015-06-27T11:42:34.000Z</published>
    <updated>2015-12-23T11:44:30.506Z</updated>
    <content type="html"><![CDATA[<p>先说明一下，我所指的鸡汤是比较高级那种，不是些励志或者暖心的屁话那种，至少是些对于怎样生活有启发意义的故事和教导。<br>写这篇的起因是14年3月16日我的一条状态“今天年级会上有个关于亚瑟王的一个小故事，顿悟到一个道理。我想，要开窍了。”那天发生了什么？</p>
<p>那天年级会辅导员引用了一个故事，《女巫和圆桌骑士的故事》，网上找到的原文如下，很不错的鸡汤故事。</p>
<blockquote>
<p>教授在讲故事：<br>年轻的亚瑟国王被邻国的伏兵抓获。邻国的君主被亚瑟的年轻和乐观所打动，没有杀他。并承诺只要亚瑟可以回答一个非常难的问题，他就可以给亚瑟自由。亚瑟有一年的时间来思考这个问题。如果一年的时间还不能给他答案，亚瑟就会被处死。<br> 这个问题是：女人真正想要的是什么？<br>这个问题连最有见识的人都困惑难解，何况年轻的亚瑟，对于他这是一个无法回答的问题。但总比死亡要好得多，亚瑟接受了国王的命题——在一年的最后一天给他答案。<br>回到自己的国家，开始向每个人征求答案：公主，妓女，牧师，智者，宫庭小丑。他问了所有的人，但没有人可以给他一个满意的回答。人们告诉他去请教一个又老又丑、声名狼藉的女巫，只有她才能知道答案。但是他们警告他，女巫的收费非常高，因为她昂贵的收费在全国是出名的。<br>一年的最后一天到了，亚瑟别无选择，只好去找女巫。女巫答应回答他的问题，但他必须首先接受她的交换条件——女巫这次提出的条件不是金银珠宝，出卖灵魂等等那些老套路，而是——和亚瑟王最高贵的圆桌武士之一，他最亲近的朋友——加温结婚。亚瑟王惊骇极了，看看女巫：驼背，丑陋不堪，只有一个牙齿，身上发出臭水沟般难闻的气味，而且经常制造出猥亵的声音。他从没有见过如此不合谐的怪物。他拒绝了，他不能强迫他的朋友娶这样的女人而让自己背付沉重的精神包袱。<br>加温知道这个消息后，对亚瑟说：“我同意和女巫结婚，没有比拯救亚瑟的生命和保存圆桌更重要的事了。”于是婚礼宣布了。女巫于是回答了亚瑟的问题：女人真正想要的是主宰自己的命运。每个人都立即知道了女巫说出了一个伟大的真理，亚瑟的生命被解救了。于是邻国的君主放了亚瑟王并给了他永远的自由。<br>来看看加温和女巫的婚礼吧，这是怎样的婚礼呀！亚瑟王在无法解脱的极度痛苦中哭泣。加温一如既往的谦和，而女巫却在庆典上表现出她最坏的行为：她用手抓东西吃，打嗝，放屁，让所有的人感到恶心，不舒服。<br>新婚的夜晚来临了：加温依然坚强地面对可怕的夜晚，走进新房。是怎样的景象在等待着他呀？一个他从没见过的美丽的少女半躺在婚床上！加温惊呆了，问她到底是怎么回事。美女回答说，因为当她是个丑陋的女巫时加温对她非常的好，于是她决定在一天的时间里一半是她丑陋女巫的一面，另一半是她美少女的一面。<br>女巫问加温：你想要我在白天作美少女，夜晚作丑女巫，还是白天作丑女巫，夜晚作美少女呢？<br>多么残酷的问题呀！加温开始思考他的困境。如果你是加温，会怎样选择呢？教授把这个问题留给了同学们。<br>第二天课上，答案五花八门，归纳起来也就是两种：一种选择白天是女巫，夜晚是美女，理由是妻子是自己的，不必爱慕虚荣，苦乐自知就可以了，一个丑陋的妻子展示给外人还会省去很多麻烦（你懂的）；另一种选择白天是美女，因为可以在厅堂上得到别人羡慕的目光，赚足面子，至于晚上，回到家里，漆黑的屋子，美丑都无所谓了，甚至可以在外寻欢作乐就不回家了。<br>教授听了所有同学的答案，没有说什么，只是问同学们是否想知道加温的回答。大家说当然想。老师说：“加温没有做任何选择，只是对他的妻子说：‘既然女人最想要的是主宰自己的命运，那么就由你自己决定吧。’于是女巫选择白天夜晚都是美丽的女人。<br>所有的人都沉默了——竟没有一个人作出加温的选择。有时我们是不是很自私？以自己的喜好去安排别人的生活，却没有想过人家是不是愿意。而当你尊重别人，理解别人时，往往得到的更多。如果我们多一些爱心，多一点关怀给人，我们是不是也会得到更多的回报？<br>温馨提示：换位思考，站在别人的立场上考虑问题，得到的会更多。</p>
</blockquote>
<p>故事就是这样了，可能有人已经觉得学到了很多呢，但要相信我，那些才微不足道呢。<br>记得当时会场上辅导员问了教授的那个问题“如果你是加温，会怎样选择呢？”，<br>选到第一个回答的同学说要白天美丽晚上丑陋，说不上原因，磨蹭了半天，辅导员又选了第二个同学，这位同学则害羞的笑着说要选择白天丑陋晚上美丽，大家一阵窃窃私语，原因嘛，嘿嘿。如果当时问我的话，其实我只是会说随她便，似乎是正确答案呢。当辅导员说出那句“既然女人最想要的是主宰自己的命运，那么就由你自己决定吧。”我也一惊，竟然歪打正着了，可是突然我的脑子里灵光闪现：<br>其实前面女巫已经讲出了这个故事的关键点“女人真正想要的是主宰自己的命运”那么只要在看后面的故事时还记得这个关键点的话，女巫的那个问题是多么容易回答，她要主宰便给她主宰的自由​。只是大家被故事里之后女巫的神奇变换所吸引而忘记了那个重点。这时，我真正明白了一个简单的道理，抓住重点。</p>
<p>抓重点这个方法可能每个人从小就知道，但是却常常忘记去做，之间有一层不真切的隔阂，这就是喝不到的鸡汤。<br>有些道理只有自己在某种境地时领悟出来才足够深刻到能够实践于日常生活，这就是自己煮的鸡汤。<br>多看书多学习去了解道理方法有哪些，多体验多思考去理解这些道理方法，会开窍的。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>先说明一下，我所指的鸡汤是比较高级那种，不是些励志或者暖心的屁话那种，至少是些对于怎样生活有启发意义的故事和教导。<br>写这篇的起因是14年3月16日我的一条状态“今天年级会上有个关于亚瑟王的一个小故事，顿悟到一个道理。我想，要开窍了。”那天发生了什么？</p>
<p>那]]>
    </summary>
    
      <category term="观点" scheme="http://zhangbohun.github.io/tags/%E8%A7%82%E7%82%B9/"/>
    
      <category term="4.思考整理" scheme="http://zhangbohun.github.io/categories/4-%E6%80%9D%E8%80%83%E6%95%B4%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MyHotKey我的热键]]></title>
    <link href="http://zhangbohun.github.io/2015/06/23/MyHotKey%E6%88%91%E7%9A%84%E7%83%AD%E9%94%AE/"/>
    <id>http://zhangbohun.github.io/2015/06/23/MyHotKey我的热键/</id>
    <published>2015-06-23T01:42:07.000Z</published>
    <updated>2017-04-15T17:32:30.829Z</updated>
    <content type="html"><![CDATA[<h2 id="首先">首先</h2>
<p>先来最想说的话：</p>
<blockquote>
<p>我写软件的最初衷就是给自己写软件。然后，如果自己觉得好用的话，也可以分享给别人。</p>
</blockquote>
<h2 id="软件介绍">软件介绍</h2>
<p>MyHotKey这个小软件的功能有两个：</p>
<ol>
<li>Win键+Q键强制退出当前应用，这个不多介绍了，遇到软件卡死可以试试。</li>
<li>最关键的，Win键+S键调用默认浏览器搜索当前选中的文字（如果选中的文字是网址链接则直接打开网址）；搜索引擎可在配置文件中自定义设置（两种搜索配置，通过CustomURLEnable切换，一种是使用自定义的搜索页面CustomURL，另一种是自定义默认搜索页面的搜索引擎LocalRightURL和LocalLeftURL），设置完成后Win键+R键重载配置生效。<br>另外默认的搜索需要使用本机的网络端口，如果有冲突可以修改LocalWebServicePort数值来设定。<br>如果喜欢默认搜索，也可以把<code>http://localhost:8087/MySearch?keyword=%s</code>作为浏览器的搜索引擎，当然这个只有在启动了MyHotKey以后才有效的。<br>如果想要开机自启的话，还是通过自建快捷方式到系统启动文件夹来实现。</li>
</ol>
<p>下载链接：<a href="http://pan.baidu.com/s/1gfmDa4V" target="_blank" rel="external">百度网盘</a></p>
<h2 id="其他（可不看）">其他（可不看）</h2>
<p>接下来梳理一下写这个软件的过程。<br>这篇文章拖了这么久才发出来的最主要原因在于第二个搜索功能，想要默认是二重搜索，就是说搜索结果的页面会同时显示<a href="https://www.baidu.com" target="_blank" rel="external">百度</a>和<a href="https://www.google.com" target="_blank" rel="external">谷歌</a>的搜索结果。最开始通过<a href="http://baigoogledu.com/" target="_blank" rel="external">百谷歌度</a>实现，可没想到刚用了没多久，百谷歌度的网站就挂了，之后一直没找到合适的替代网站，就想着等到百谷歌度恢复了再分享这个软件，可惜似乎是不可能了。（后来一直用<a href="http://www.3bsou.com/" target="_blank" rel="external">三百搜</a>替代，这也是软件现在预设的自定义搜索，但它的谷歌搜索有点问题，总之不是理想之选。）</p>
<p>直到最近（20160401），工作也找好了，毕设也没什么事了，闲下来就想把这个小软件给完善一下。研究了一下新版的Aauto快手(改名叫<a href="http://bbs.aardio.com/" target="_blank" rel="external">aardio</a>了），发现新版中自建本机http服务器的代码实现变得非常简洁，这正好有助于实现我改进的办法：自建一个本地的http服务器，然后调用自己做的搜索页面，这样的好处是不用担心网上那些多重搜索的网站不稳定的问题，而且可以自定义搜索引擎，另外如果觉得原页面太简陋还可以自行修改。</p>
<p>等基本的做好之后又发现一个大坑，谷歌搜索结果的页面是不允许被别的网页的frame调用的（因为设置了X-Frame-Options：SAMEORIGIN限制），研究了很久也没办法，最后找到了一个合适的<a href="http://www.g363.com/" target="_blank" rel="external">谷歌镜像站</a>替代，也很不错。</p>
<p>大概就是这样了。</p>
<p>2017-04-16 更新（其实很早就写了只是一直没有更新博客）</p>
<ol>
<li>简单修改了搜索页面，上方添加了搜索框</li>
<li>新增了配合使用的添加百度相关搜索词的油猴脚本（需要自行修改网址参数）</li>
<li>虽然这个软件好像至今没有人下载用过</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="首先">首先</h2>
<p>先来最想说的话：</p>
<blockquote>
<p>我写软件的最初衷就是给自己写软件。然后，如果自己觉得好用的话，也可以分享给别人。</p>
</blockquote>
<h2 id="软件介绍">软件介绍</h2>
<p>My]]>
    </summary>
    
      <category term="我的软件" scheme="http://zhangbohun.github.io/tags/%E6%88%91%E7%9A%84%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="工具" scheme="http://zhangbohun.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="2.软件" scheme="http://zhangbohun.github.io/categories/2-%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[这博客要写些什么？]]></title>
    <link href="http://zhangbohun.github.io/2015/06/16/%E8%BF%99%E5%8D%9A%E5%AE%A2%E8%A6%81%E5%86%99%E4%BA%9B%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    <id>http://zhangbohun.github.io/2015/06/16/这博客要写些什么？/</id>
    <published>2015-06-16T09:14:00.000Z</published>
    <updated>2015-09-03T05:08:07.659Z</updated>
    <content type="html"><![CDATA[<p>个人博客是一个人的展示厅。</p>
<p>这博客不写什么：<br>1.不懂的不写。<br>2.收集摘抄汇总不写。<br>3.琐碎的生活杂事和情感不写。</p>
<p>这博客要写什么，<br>以下是我开始写博客时给自己设计的目录项和对应理由：<br>1.编程，我的爱好和饭碗<br>2.软件，工具癖<br>3.写作，是人都有的冲动吧<br>4.思考整理，我的人生信条<br>5.收获感悟，唯有创造与收获令人愉悦<br>6.方法技巧，一些经验，客观的经验<br>7.杂七杂八，兴趣广泛</p>
<p>另，博文上显示的时间都是我创建草稿的时间不是发布时间，这样是为了方便记录这些思考节点的产生时间。但由于我的习惯是有一点点想法就先写下来，然后慢慢补充修改成一篇完整的博文，所以经常会是突然哪天就多了一篇几个月前的博文，莫怪。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>个人博客是一个人的展示厅。</p>
<p>这博客不写什么：<br>1.不懂的不写。<br>2.收集摘抄汇总不写。<br>3.琐碎的生活杂事和情感不写。</p>
<p>这博客要写什么，<br>以下是我开始写博客时给自己设计的目录项和对应理由：<br>1.编程，我的爱好和饭碗<]]>
    </summary>
    
      <category term="介绍" scheme="http://zhangbohun.github.io/tags/%E4%BB%8B%E7%BB%8D/"/>
    
      <category term="7.杂七杂八" scheme="http://zhangbohun.github.io/categories/7-%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[程序员入门]]></title>
    <link href="http://zhangbohun.github.io/2015/06/07/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%85%A5%E9%97%A8/"/>
    <id>http://zhangbohun.github.io/2015/06/07/程序员入门/</id>
    <published>2015-06-06T16:08:23.000Z</published>
    <updated>2016-02-22T16:17:14.940Z</updated>
    <content type="html"><![CDATA[<p>常识<br>历史，计算机学科体系的升级演进过程。<br>环境，对电脑，软件，网络逐渐熟悉。<br>学科专业信息，专业技能树，互联网信息，前沿科技信息。</p>
<p>工具<br>一个好的IDE对于编程语言初学者的影响是非常大的。<br>我学Python的最初原因是Py(x,y)这个Python库和软件的集合包。<br>同样我开始好好学C语言，写C的代码也是在使用了Dev-cpp之后。<br>工欲善其事，必先利其器。<br>磨刀不误砍柴工。<br>工具就是力量。</p>
<p>实践<br>只有自己去做时才能深入理解，发现自己知识和经验上的错漏。<br>只有实践产能产生可见的成果，也只有自己付出的时间和血汗可以相信。</p>
<p>意识<br>主动刻意积极地去思考，去锻炼，去学习。<br>耐心、严谨性养成，思考能力提升。</p>
<p>思维<br>思维有其惯性，同时思维影响着其他的行为的习惯，但这种影响都是不是一蹴而就的。<br>编程的习惯，生活的习惯会相互影响。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>常识<br>历史，计算机学科体系的升级演进过程。<br>环境，对电脑，软件，网络逐渐熟悉。<br>学科专业信息，专业技能树，互联网信息，前沿科技信息。</p>
<p>工具<br>一个好的IDE对于编程语言初学者的影响是非常大的。<br>我学Python的最初原因是Py(x,]]>
    </summary>
    
      <category term="整理总结" scheme="http://zhangbohun.github.io/tags/%E6%95%B4%E7%90%86%E6%80%BB%E7%BB%93/"/>
    
      <category term="1.编程" scheme="http://zhangbohun.github.io/categories/1-%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[《Her》观后瞎想]]></title>
    <link href="http://zhangbohun.github.io/2015/06/03/%E3%80%8AHer%E3%80%8B%E8%A7%82%E5%90%8E%E7%9E%8E%E6%83%B3/"/>
    <id>http://zhangbohun.github.io/2015/06/03/《Her》观后瞎想/</id>
    <published>2015-06-03T04:35:46.000Z</published>
    <updated>2016-01-22T12:09:44.279Z</updated>
    <content type="html"><![CDATA[<p><img src="\images\her.png" alt=""><br>  </p>
<p>一个内向不善交际但自认为善于思考偏爱独处的人，<br>某天你居然遇到了一个能和你聊得来的人，你觉得那人如何如何懂你，竟然能够看到你灵魂深处的那些隐秘的闪光点，简直是你的“伯乐知己”或者甚至还可能是理想的另一半呢。<br>这种情况基本只有一种可能，其实那人无论和谁都聊得来，因为你也是个普通人罢了。</p>
<p>说的难听点，就算你是一匹独特非凡的千里马，但能发现千里马的伯乐也不会只能发现你这一匹千里马的。人也是如此，同性异性之间都是，能和你愉快相处的人也能和别人（更）愉快的相处。<br>所谓的红颜（蓝颜）知己不是在某一天突然就可以有的。当然也更别说什么你生命中的白马王子和白马公主了，那些都是童话故事罢了，光良曾经说过“童话里都是骗人的”，他说得对。</p>
<p>而我嘛，哈哈，所以现在只想做个群体中的孤立者，能不理我就别烦我吧。不过和人相处也是必须的，和人愉快地相处是美妙的，只要别有太多自认非凡的执念和对对方奇怪的期许就好。</p>
<p>另：<br>作为受戏剧（电视剧，电影，小说等等各种）影响过度的我们一定要冲出戏剧感的框架回到自己的真实生活里来。随便问你，你想要的爱情是什么样的？<br><br>  <br>  <br>  <br>  <br>  <br>  <br>  <br><br>呵呵，你是不是在想某个故事里场景那样的，男主女主或者轰轰烈烈或者平平淡淡在一起？<br>醒醒吧，那都不是真实的生活啊。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="\images\her.png" alt=""><br>  </p>
<p>一个内向不善交际但自认为善于思考偏爱独处的人，<br>某天你居然遇到了一个能和你聊得来的人，你觉得那人如何如何懂你，竟然能够看到你灵魂深处的那些隐秘的闪光点，简直是你的“伯乐知己]]>
    </summary>
    
      <category term="观后感" scheme="http://zhangbohun.github.io/tags/%E8%A7%82%E5%90%8E%E6%84%9F/"/>
    
      <category term="5.收获感悟" scheme="http://zhangbohun.github.io/categories/5-%E6%94%B6%E8%8E%B7%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[虚拟机和Linux系统]]></title>
    <link href="http://zhangbohun.github.io/2015/05/23/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%92%8CLinux%E7%B3%BB%E7%BB%9F/"/>
    <id>http://zhangbohun.github.io/2015/05/23/虚拟机和Linux系统/</id>
    <published>2015-05-23T08:39:09.000Z</published>
    <updated>2015-12-23T11:56:49.138Z</updated>
    <content type="html"><![CDATA[<p>这两天在折腾虚拟机和Linux系统，有一些莫名奇妙的问题。<br>因为我的Win7系统破解了主题导致VirtualBox不能用，只好用了VMplayer，它是VM的免费的版本。</p>
<p>本来非常想用Ubuntu的(¬_¬)<br>可是为什么VM的linux_tools就不能在Ubuntu14里正常编译呢？而在Ubuntu12下是可以正常编译的，估计是因为不支持新版本的Linux内核，不正常编译的话就不能实现虚拟机和宿主机共享文件夹的功能。还有VM的unity模式用Ubuntu也不能正常开启。上网查了很久据说是因为Ubuntu内部也有个软件叫unity，坑爹的Ubuntu。</p>
<p>又试着装了好多个Linux系统，发现只有Linux Mint没有以上问题。<br>所以更好的顺心的Linux新手入门装备，我推荐<a href="http://www.vmware.com/products/player" target="_blank" rel="external">VMplayer</a>+<a href="http://www.linuxmint.com/" target="_blank" rel="external">Linux Mint</a><br>再列几个注意事项，经验之谈，仅供参考：</p>
<ol>
<li>VM安装Linux的时候注意要让ISO映像和建立的虚拟机在同一个硬盘分区里，这样会部署得快一点。</li>
<li>安装系统时不要用VM的自动安装，因为还没装tools所以会卡在半路。选择“稍后安装操作系统”然后在设置“自定义硬件”的时候挂载系统ISO映像到虚拟光驱，启动虚拟机就可以进行安装了。</li>
<li>安装的时候不要选择下载更新，因为默认的下载源一般是在国外的，下载速度不行。</li>
<li>安装完系统后先把没用的软件卸载了，比如影音播放器，Office套件之类的（因为不是做日常使用的操作系统这些软件自然没用了），然后设置并更新国内的镜像软件源再进行软件包的升级更新。</li>
<li>tools工具是一定要装的，装了之后才能支持拖拽，剪贴板、文件夹共享。但是tools工具不要直接更新下载安装，因为VM官网的网络不通畅不一定能下载成功，直接上网搜Linux系统tools的ISO映像文件(<a href="http://down.repaik.com/VMware.Workstation/VMTools/" target="_blank" rel="external">或者这里</a>)下载，然后挂载安装。Linux版本tools是要自己编译的，但操作很简单，一路点确认保持默认设置就可以了，但要在root用户下进行。</li>
<li>unity模式是很好用的，能实现无缝衔接让虚拟机内的窗口弹出到宿主机。</li>
<li>最后，List都不要超过7项，就这样。</li>
</ol>
<p>当然，以上部分建议是有时效性的，因为保不准哪天VM的tools就支持新Linux内核了呢，保不准哪天破解主题的Win7能用VirtualBox了呢，保不准哪天unity模式不和Ubuntu冲突了。。。<br>总而言之呢，算是正式开始Linux之旅了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这两天在折腾虚拟机和Linux系统，有一些莫名奇妙的问题。<br>因为我的Win7系统破解了主题导致VirtualBox不能用，只好用了VMplayer，它是VM的免费的版本。</p>
<p>本来非常想用Ubuntu的(¬_¬)<br>可是为什么VM的linux_tools]]>
    </summary>
    
      <category term="介绍" scheme="http://zhangbohun.github.io/tags/%E4%BB%8B%E7%BB%8D/"/>
    
      <category term="使用技巧" scheme="http://zhangbohun.github.io/tags/%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
      <category term="2.软件" scheme="http://zhangbohun.github.io/categories/2-%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
</feed>
